{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\.vscode\\\\projects\\\\Flask_react\\\\frontend\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./login.css\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setemail] = useState('');\n  const [password, setpassword] = useState('');\n  const handleLogin = async event => {\n    event.preventDefault(); // Prevent page reload on form submission\n\n    // Make a POST request to the backend with form data\n    const response = await fetch(`/api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      alert(data.message); // Show success message from Flask\n      setemail('');\n      setpassword('');\n    } else {\n      alert(\"Error logining in\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setemail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 96\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 99\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          className: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"\\\"Go Back\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"cDSWXnhTxlpeg5KoSYgFwv9KhhI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setemail","password","setpassword","handleLogin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert","message","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","required","placeholder","value","onChange","e","target","to","_c","$RefreshReg$"],"sources":["C:/Users/franc/.vscode/projects/Flask_react/frontend/src/login.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./login.css\";\r\nimport { Link } from 'react-router-dom';\r\nfunction Login(){\r\n    const [email, setemail] = useState('');\r\n    const [password, setpassword] = useState('');\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault(); // Prevent page reload on form submission\r\n\r\n        // Make a POST request to the backend with form data\r\n        const response = await fetch(`/api/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email, password }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            alert(data.message); // Show success message from Flask\r\n            setemail('');\r\n            setpassword('');\r\n        } else {\r\n            alert(\"Error logining in\");\r\n        }\r\n    };\r\n\r\n    return(<>  \r\n    <div className='login'>\r\n        <form onSubmit={handleLogin}>\r\n            <h1>Login</h1>\r\n            <input type='email' required placeholder='Email' value={email}\r\n                                            onChange={(e) => setemail(e.target.value)}></input><br></br>\r\n            <input type='password' required placeholder='password' value={password}\r\n                                            onChange={(e) => setpassword(e.target.value)}></input><br></br>\r\n            <input type=\"submit\" value=\"Submit\" className=\"submit\" />\r\n        </form>\r\n        <h3><Link to=\"/login\">\"Go Back\"</Link></h3>\r\n    </div>\r\n    </>);\r\n}\r\n\r\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}